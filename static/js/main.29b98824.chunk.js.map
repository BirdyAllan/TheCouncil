{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/counselor.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","name","role","id","className","alt","src","CardList","counselor","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","this","filteredCouns","filter","toLowerCase","includes","length","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kOAeeA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,GAC1B,OACA,yBAAKC,UAAU,mDACd,yBAAKC,IAAI,YAAYC,IAAG,wCAAmCH,EAAnC,mBACxB,6BACC,4BAAKF,GACL,2BAAIC,MCaQK,EAlBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,UAClB,OACC,6BAECA,EAAUC,KAAI,SAACC,EAAKC,GACnB,OACC,kBAAC,EAAD,CACAC,IAAKD,EACLR,GAAIK,EAAUG,GAAGR,GACjBF,KAAMO,EAAUG,GAAGV,KACnBC,KAAMM,EAAUG,GAAGT,KACnBI,IAAKE,EAAUG,GAAGL,WCHRO,EAVC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACjB,OACC,yBAAKV,UAAU,OACd,2BAAOA,UAAU,mCACjBW,KAAK,SAASC,YAAY,oBAC1BC,SAAUH,MCGEI,EARA,SAACC,GACf,OACC,yBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAO,kBAAmBC,OAAO,UACjEJ,EAAMK,WCLIhB,EAAY,CACvB,CACEL,GAAI,EACJF,KAAM,SACNC,KAAM,kBAER,CACEC,GAAI,EACJF,KAAM,UACNC,KAAM,UAER,CACEC,GAAI,EACJF,KAAM,UACNC,KAAM,oBAER,CACEC,GAAI,EACJF,KAAM,UACNC,KAAM,WAER,CACEC,GAAI,EACJF,KAAM,SACNC,KAAM,qBAER,CACEC,GAAI,EACJF,KAAM,SACNC,KAAM,QAER,CACEC,GAAI,EACJF,KAAM,UACNC,KAAM,qBAER,CACEC,GAAI,EACJF,KAAM,QACNC,KAAM,eAER,CACEC,GAAI,EACJF,KAAM,QACNC,KAAM,aAER,CACEC,GAAI,GACJF,KAAM,QACNC,KAAM,cAER,CACEC,GAAI,GACJF,KAAM,SACNC,KAAM,kBAER,CACEC,GAAI,GACJF,KAAM,QACNC,KAAM,WAER,CACEC,GAAI,GACJF,KAAM,WACNC,KAAM,gCAER,CACEC,GAAI,GACJF,KAAM,OACNC,KAAM,yCCxBKuB,G,wDArCd,aAAc,IAAD,8BACZ,gBAYDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAZxC,EAAKC,MAAM,CACVxB,UAAW,GACXqB,YAAY,IAJD,E,gEASZI,KAAKL,SAAS,CAACpB,UAAWA,M,+BASlB,IAAD,EACwByB,KAAKD,MAA7BxB,EADA,EACAA,UAAWqB,EADX,EACWA,YACZK,EAAgB1B,EAAU2B,QAAO,SAAA3B,GACvC,OAAOA,EAAUP,KAAKmC,cAAcC,SAASR,EAAYO,kBAEzD,OAAQ5B,EAAU8B,OAGlB,yBAAKlC,UAAU,MACd,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWU,aAAcmB,KAAKP,iBAC9B,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAUlB,UAAW0B,MANrB,2C,GAzBcK,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SD2H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.29b98824.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name, role, id}) => {\r\n\treturn(\r\n\t<div className='bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t<img alt='counselor' src={`https://robohash.org/set_set4/${id}?size=200x200`} />\r\n\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{role}</p>\r\n\t\t</div>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({counselor})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n\t\t\tcounselor.map((user,i)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\tid={counselor[i].id} \r\n\t\t\t\t\tname={counselor[i].name} \r\n\t\t\t\t\trole={counselor[i].role}\r\n\t\t\t\t\tsrc={counselor[i].src}/>\r\n\t\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchChange})=>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype='search' placeholder='search counselors' \r\n\t\t\tonChange={searchChange}/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflow: 'scroll', border:'1px solid black', height:'800px'}} >\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t)\r\n};\r\n\r\nexport default Scroll;","export const counselor = [\r\n  {\r\n    id: 1,\r\n    name: 'Hubert',\r\n    role: 'Fishy Business',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Herbert',\r\n    role: 'Tyrant',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Michael',\r\n    role: 'Sells sea shells',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Leonard',\r\n    role: 'exists.',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Walter',\r\n    role: 'likes apple juice',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Cheems',\r\n    role: 'Doge',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Ricardo',\r\n    role: 'Basshunter - Dota',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Tyler',\r\n    role: 'The creator',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Linus',\r\n    role: 'Tech-tips',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Gusic',\r\n    role: 'vibe check',\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Yotube',\r\n    role: 'Gets your nose',\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Jacob',\r\n    role: 'Hamster',\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'Reginald',\r\n    role: 'Crab on alternating Tuesdays',\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Carl',\r\n    role: 'here only once and then gone forever',\r\n  }\r\n];\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport {counselor} from '../components/counselor';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\tcounselor: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidMount(){\r\n\t\tthis.setState({counselor: counselor});\r\n\t}\r\n\r\n\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield:event.target.value})\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tconst {counselor, searchfield}=this.state;\r\n\t\tconst filteredCouns = counselor.filter(counselor=>{\r\n\t\treturn counselor.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn !counselor.length ?\r\n\t\t\t\t<h1>Loading</h1> :\r\n\t\t(\r\n\t\t<div className='tc'>\r\n\t\t\t<h1 className='f1'>The Council</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t<Scroll>\r\n\t\t\t\t<CardList counselor={filteredCouns}/>\r\n\t\t\t</Scroll>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}